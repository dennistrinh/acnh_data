<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Welcome!</title>
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css" type="text/css">
</head>
<body>
  <div class="menu_container">
    <ul class="menu">
      <li class="menu_button"><a href="./" class="menu_link">Home</a></li>
      <li class="menu_button"><a href="./bugs" class="menu_link">Bugs</a></li>
      <li class="menu_button"><a href="./fish" class="menu_link">Fish</a></li>
    </ul>
  </div>
  <div class="menu_container">
    <h3>June 19th, 2020: Refactoring</h3>
    <p> I've been exporting code bits into their own modules
    	for organization purposes. The API requests code needs
	a bit of refactoring as well. The times have been
	"demilitarized" and switched to AM/PM format. It
	wasn't too bad of a fix. I just had to subtract 12
	from the database query if the time exceeded 12 and stick
	a PM in front of it. New filters are coming soon.
    </p>
  </div>
  <div class="menu_container">
    <h3>June 16th, 2020: Unnecessary complexity</h3>
    <p> After doing some experimentation and research with React,
    	I feel like I'm making the application needlessly complicated
	for the sake of including more technologies. Unless I plan to
	make an API out of my database that works with CRUD (create,
	read, update, and delete), I feel as if EJS is enough for the
	time being. If anything, I should split this blog with the data
	website and change this into a React App. Regardless, I learned
	quite a bit about React. It's pretty neat how you can just package
	all of your HTML into reusuable components. In regards to this website,
	I still need to adjust the CSS on the tables. All the tables
	display properly with correct page sizing, but the Dab (October Fish)
	is strangely offset.
    </p>
  </div>
  <div class="menu_container">
    <h3>June 11th, 2020: Back at it</h3>
    <p> Due to some work obligations, I've been away for a bit.
    	Doing some research for the moment learning basic React.
	Tomorrow, I'll start breaking apart the EJS files and
	try not to butcher the website in the process.
    </p>
  </div>
  <div class="menu_container">
    <h3>May 29th, 2020: Reorganization</h3>
    <p> Still working on understanding Jenkins. In an effort to explore more
    	technologies, I'm going to move from EJS to JSX to learn a bit about
    	React. Afterwards, the plan is to reorganize my SQL schema a bit or possibly
    	reformat the data in the tables so it's a bit more readable. A friend once told me,
    	"military time requires me to do math. Just stick with AM and PM."
    </p>
  </div>
  <div class="menu_container">
    <h3>May 22nd, 2020: Messing around with continuous integration</h3>
    <p>I've been poking around at CI tooling. I'm trying to setup a Jenkins
       pipeline to automatically build my Docker image, but I'm having a little trouble
       understanding some of the documentation. Needs a bit more research and YouTube
       video searching. On the other hand, I still need to refactor the Express requests
       into separate functions for reusability sake. Many things to do. Fun times ahead.
    </p>
  </div>
  <div class="menu_container">
    <h3>May 19th, 2020: Tables updated with more info</h3>
    <p>I wonder what happened to my first certificate, but it didn't seem to go through.
       I reissued a new certificate with Certbot and it seems to be set up correctly.
       All my HTTP requests now automatically redirect to HTTPS as well. Got the cool
       little lock next to my domain name. I still need to figure out how to do that
       second table though.
    </p>
  </div>
  <div class="menu_container">
    <h3>May 18th, 2020: Tables updated with more info</h3>
    <p>Times and shadow sizes are up. HTTPS should also be set up soon once the certificate
       gets validated. I still have to figure out how to get two tables up at the same time.
       I could run two queries in one statement, but nodejs highly recommends against it as
       it is a security risk. Hmm.
    </p>
  </div>
  <div class="menu_container">
    <h3>May 14th, 2020: Images are up. Basic filtering also working.</h3>
    <p>160 images all in. Had to do some formatting with the SQL names to render the images correctly.
       At the moment, it is possible to filter to see which new bugs and fish are catchable in a month.
       Biggest problem today: Converting the user's month input to SQL readable input then passing that
       to the query. My solution was to create a separate module that translates the user's input then
       returns a complete SQL statement ready to use for querying. Locations are also in. 
       I need to add a separate table for bugs and fish that continue to spawn
       in a new month. Times for spawns also need to be added. Table CSS needs some work (some
       of the tables resize strangely).
    </p>
  </div>
  <div class="menu_container">
    <h3>May 13th, 2020: Setting up DNS and port forwarding done.</h3>
    <p>Woo! I can connect to the EC2 instance anywhere. I still need to upload images though.</p>
  </div>
  <div class="menu_container">
    <h3>May 12th, 2020: Got the database connected.</h3>
    <p>Forgot to allow public IPs in the inbound rules. Whoops.</p>
  </div>
  <div class="menu_container">
    <h3>May 9th, 2020: Got the EC2 instance set up.</h3>
    <p>Using the Amazon Linux 2 AMI. Let's see if I can get node to see my RDS database."
       It seems to be mad at me for some connection timeout reason. Possibly the
       wrong password. Not sure.
    </p>
  </div>
  <div class="menu_container">
    <h3>May 7th, 2020: Dumped the database onto RDS</h3>
    <p>Took my local MariaDB and moved it over to RDS. Went smoother than I thought.
       Thanks mysqldump.
    </p>
  </div>
  <div class="menu_container">
    <h3>May 3rd, 2020: Finger workout</h3>
    <p>I should've found a different way to insert all that data into MariaDB instead of writing hundreds of queries.
       Oh well. My fingers probably grew some muscles. I had to find a workaround solution for bugs and fish that
       spawn in a non-continuous timeframe. i.e. Spawns in April and October to December. I split them into two columns.
       There's probably a better way to do this. Gotta research.
    </p>
  </div>
  <div class="menu_container">
    <h3>May 1st, 2020: Animal Crossing</h3>
    <p>My goal this month is to create a website where I can filter animal crossing data by month. I'm thinking
       of exploring AWS while doing this project.
    </p>
  </div>

</body>
</html>
